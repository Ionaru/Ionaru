name: npm package CI/CD

on:
  workflow_call:

    inputs:

      node-versions:
        description: 'Stringified JSON object listing target Node versions.'
        default: '16'
        required: false
        type: string

    secrets:

      NPM_TOKEN:
        description: 'NPM audit token, omit to skip deployment.'
        required: true

jobs:

  test:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ${{ fromJson(inputs.node-versions) }}

    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          
      - name: Update npm
        run: npm i -g npm@latest

      - name: Checkout
        uses: actions/checkout@v3

      - name: Audit
        run: npm audit --omit=dev

      - name: Install packages
        run: npm ci

      - name: Test
        run: npm test

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          directory: coverage

  deploy:

    needs: [ test ]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Update npm
        run: npm i -g npm@latest

      - uses: actions/checkout@v3

      - name: Install packages
        run: npm ci

      - name: Deploy @latest version to npm
        if: startsWith(github.ref, 'refs/tags/')
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}

      - name: Update @next version
        if: startsWith(github.ref, 'refs/heads/')
        run: npm version prerelease --no-git-tag-version --preid "$GITHUB_RUN_NUMBER"

      - name: Deploy @next version to npm
        if: startsWith(github.ref, 'refs/heads/')
        uses: JS-DevTools/npm-publish@v1
        with:
          tag: next
          token: ${{ secrets.NPM_TOKEN }}
          check-version: false
